<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:AnimeTime.WPF.Views.Controls"
    xmlns:conv="clr-namespace:AnimeTime.WPF.Converters"
    xmlns:v="clr-namespace:AnimeTime.WPF.Views">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/Constants.xaml" />
        <ResourceDictionary Source="/Resources/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:TopRightCornerConverter x:Key="TopRightCornerConverter" />
    <conv:ColorLightnessConverter x:Key="ColorLightnessConverter" />
    <conv:WidthHeightToRectConverter x:Key="WidthHeightToRectConverter" />
    <conv:CornerRadiusToDoubleConverter x:Key="CornerRadiusToDoubleConverter" />

    <Style x:Key="CaptionButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#212121" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="23" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(v:ExtendedProperties.CornerRadius)}">
                        <ContentPresenter HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource Self}, Mode=OneTime, Converter={StaticResource ColorLightnessConverter}, ConverterParameter=10}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CaptionButtonHollow"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style
        x:Key="CaptionButtonClose"
        BasedOn="{StaticResource CaptionButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource CaptionCloseBtnBrush}" />
    </Style>

    <Style x:Key="DefaultWindow" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    x:Name="chrome"
                    CaptionHeight="{StaticResource WindowCaptionHeight}"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border
                        x:Name="windowBorder"
                        Background="{StaticResource WindowBackgroundBrush}"
                        CornerRadius="3">
                        <Border.Clip>
                            <RectangleGeometry RadiusX="{Binding ElementName=windowBorder, Path=CornerRadius, Converter={StaticResource CornerRadiusToDoubleConverter}}" RadiusY="{Binding ElementName=windowBorder, Path=CornerRadius, Converter={StaticResource CornerRadiusToDoubleConverter}}">
                                <RectangleGeometry.Rect>
                                    <MultiBinding Converter="{StaticResource WidthHeightToRectConverter}">
                                        <Binding ElementName="windowBorder" Path="ActualWidth" />
                                        <Binding ElementName="windowBorder" Path="ActualHeight" />
                                    </MultiBinding>
                                </RectangleGeometry.Rect>
                            </RectangleGeometry>
                        </Border.Clip>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="windowCaption" Height="{Binding Source={StaticResource WindowCaptionHeight}}" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                Height="Auto"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Panel.ZIndex="999"
                                Orientation="Horizontal">
                                <Button Style="{StaticResource CaptionButtonHollow}">
                                    <Image
                                        Width="16"
                                        VerticalAlignment="Center"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        Source="/Assets/Icons/cogwheel.png" />
                                </Button>
                                <Button
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MinimizeCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=.}"
                                    Style="{StaticResource CaptionButton}">
                                    <Image
                                        Width="12"
                                        Margin="0,0,0,5"
                                        VerticalAlignment="Bottom"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        Source="/Assets/Icons/minimize.png" />
                                </Button>
                                <Button
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.MaximizeCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=.}"
                                    IsEnabled="False"
                                    Style="{StaticResource CaptionButton}">
                                    <Image
                                        Width="12"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        Source="/Assets/Icons/expand.png" />
                                </Button>
                                <Button
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.CloseCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=.}"
                                    Style="{StaticResource CaptionButtonClose}">
                                    <Image
                                        Width="12"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        Source="/Assets/Icons/shuriken-white.png" />
                                </Button>
                            </StackPanel>
                            <ContentPresenter Grid.Row="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="windowBorder" Property="Padding" Value="7" />
                            <Setter TargetName="windowCaption" Property="Height" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="7" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>