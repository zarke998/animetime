<UserControl x:Class="AnimeTime.WPF.Views.Controls.ListViewExpandable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AnimeTime.WPF.Views.Controls"
             xmlns:converters="clr-namespace:AnimeTime.WPF.Converters"
             xmlns:ap="clr-namespace:AnimeTime.WPF.AttachedProperties"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:Name="Root">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/ControlStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:MultiplyConverter x:Key="MultiplyConverter" />
            <converters:BooleanToScrollBarVisibility x:Key="BooleanToScrollBarVisibility" />
            <Style x:Key="FlexboxListView"
                   TargetType="{x:Type ListView}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Disabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListView}">
                            <ItemsPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border>
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <local:FlexboxPanel Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth}" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <Image Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.15}"
                                       Height="200"
                                       Source="{Binding Image}"
                                       RenderOptions.BitmapScalingMode="HighQuality"/>
                                <TextBlock Foreground="White"
                                           HorizontalAlignment="Center"
                                           Margin="0,10,0,0"
                                           Height="20"
                                           Text="{Binding Title}" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Style>
        <Style TargetType="{x:Type local:ListViewExpandable}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:ListViewExpandable}">
                        <StackPanel x:Name="Container">
                            <TextBlock Text="{TemplateBinding Title}"
                                       Foreground="White"
                                       FontSize="24"
                                       Margin="5,0,0,10" />
                            <ListView x:Name="ItemsContainer"
                                      Style="{StaticResource FlexboxListView}"
                                      Background="Transparent"
                                      Width="{Binding ElementName=Container, Path=ActualWidth}"
                                      Height="230"
                                      ScrollViewer.VerticalScrollBarVisibility="{Binding ElementName=Root, Path=IsExpanded, Converter={StaticResource BooleanToScrollBarVisibility}}"
                                      IsEnabled="{TemplateBinding IsExpanded}" />
                            <Button x:Name="ArrowButton"
                                    Click="Button_Click"
                                    Height="25"
                                    Width="35"
                                    Margin="0,5,0,0"
                                    ap:GeneralAttachedProperties.RotationAngle="-90">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Height="{TemplateBinding Height}"
                                                Width="{TemplateBinding Width}"
                                                Background="Transparent"
                                                BorderThickness="1"
                                                x:Name="Border">
                                            <Image Source="/Assets/Icons/arrow-white.png"
                                                   RenderOptions.BitmapScalingMode="HighQuality"
                                                   x:Name="Image">
                                                <Image.RenderTransform>
                                                    <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:GeneralAttachedProperties.RotationAngle)}"
                                                                     CenterX="{Binding ElementName=Image, Path=ActualWidth, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.5}"
                                                                     CenterY="{Binding ElementName=Image, Path=ActualHeight, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.5}" />
                                                </Image.RenderTransform>
                                            </Image>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver"
                                                     Value="True">
                                                <Setter Property="Cursor"
                                                        Value="Hand" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsExpanded}"
                                         Value="True">
                                <Setter TargetName="ArrowButton"
                                        Property="ap:GeneralAttachedProperties.RotationAngle"
                                        Value="90" />
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ItemsContainer"
                                                             Storyboard.TargetProperty="Height"
                                                             To="459"
                                                             Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ItemsContainer"
                                                             Storyboard.TargetProperty="Height"
                                                             To="230"
                                                             Duration="0:0:0.5">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Style>
</UserControl>